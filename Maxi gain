from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# Token de ton bot
TOKEN = "8255388464:AAFlZ1tThfkxGj6RlL1qB8CWz14aNDRxizE"

# Commande /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("ðŸ“¥ Recharges", callback_data='recharges')],
        [InlineKeyboardButton("ðŸ’¸ Retrait", callback_data='retrait')],
        [InlineKeyboardButton("ðŸ‘¥ InvitÃ©", callback_data='invite')],
        [InlineKeyboardButton("ðŸ“‚ Dossiers financiers", callback_data='dossiers')],
        [InlineKeyboardButton("âœ… TÃ¢ches", callback_data='taches')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("Bienvenue dans le mini-app !", reply_markup=reply_markup)

# RÃ©ponse aux clics de bouton
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "recharges":
        await query.edit_message_text("ðŸ’° Pour recharger, envoie tes fonds Ã  :\n\nUSDT BEP20 : 0x080667fBC9175EDedF3dA6656CE9ff2A67C1D785")
    elif query.data == "retrait":
        await query.edit_message_text("ðŸ’¸ Retrait : entre ton adresse wallet pour recevoir tes gains.")
    elif query.data == "invite":
        await query.edit_message_text("ðŸ‘¥ Invite tes amis et gagne des bonus !")
    elif query.data == "dossiers":
        await query.edit_message_text("ðŸ“‚ Historique financier : bientÃ´t disponible.")
    elif query.data == "taches":
        await query.edit_message_text("âœ… TÃ¢ches disponibles : complÃ¨te-les pour gagner.")

# Lancement du bot
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))

    print("Bot dÃ©marrÃ©...")
    app.run_polling()

if __name__ == '__main__':
    main()
